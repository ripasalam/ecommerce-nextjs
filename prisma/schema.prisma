// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
 
}


datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}



model User {
  id              Int                 @id @default(autoincrement())
  name            String?
  email           String?             @unique
  emailVerified   String?
  image           String?
  hashedPassword  String
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  role            Role                @default(User)
  accounts        Account[]
  orders          Order[]
  addresses       Address?
 
 
}
model Address {
  id        Int   @id @default(autoincrement())
  userId    Int   @unique
  street    String
  country   String
  province  String
  city      String
  district  String
  subdistrict String
  postal String
  phone String
  createdAt             DateTime            @default(now())
  updatedAt             DateTime?            @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  User
  Admin
}

model Account {
  id                 Int      @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  createdAt             DateTime            @default(now())
  updatedAt             DateTime?            @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

}

model Product{
  id                             Int                 @id @default(autoincrement())
  name                           String
  description                    String
  sizes                          Decimal[]   @default([3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9.5, 10, 10.5, 11, 11.5, 12, 12.5, 13, 13.5, 14, 14.5, 15, 16, 17, 18])
  quantity                       Int
  price                          Float
  category                       Category    @relation(fields: [categoryId], references: [id])
  categoryId                     Int
  orderItems                     OrderItem[]
  image                          String
  createdAt                      DateTime            @default(now())
  updatedAt                      DateTime            @updatedAt
}

model Category {
  id          Int                 @id @default(autoincrement())
  name        String    @unique
  image       String
  description String
  products    Product[]
  createdAt   DateTime            @default(now())
  updatedAt   DateTime?            @updatedAt
}



model OrderItem {
  id        Int                 @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId  Int
  order      Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId    Int
  size       Decimal
  quantity   Int
  item_price Decimal
  createdAt                 DateTime    @default(now())
  updatedAt                 DateTime?
 

  @@index([productId])
}

enum Status {
  Created
  Processing
  Failed
  Success
}

model Order {
  id                        Int         @id @default(autoincrement())
  user                      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                    Int
  status                    Status      @default(Created)
  orderItems                OrderItem[]
  total_price               Decimal?
  transactionId              String?     @unique
  invoice_number            String?     @unique
  createdAt                 DateTime    @default(now())
  updatedAt                 DateTime?
 

  @@index([userId])
}



